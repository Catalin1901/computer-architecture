"use strict";(self.webpackChunkcomputer_architecture=self.webpackChunkcomputer_architecture||[]).push([[8959],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>g});var a=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=a.createContext({}),u=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(r),s=i,g=m["".concat(c,".").concat(s)]||m[s]||d[s]||n;return r?a.createElement(g,o(o({ref:t},p),{},{components:r})):a.createElement(g,o({ref:t},p))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<n;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},7048:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>u});var a=r(8168),i=(r(6540),r(5680));const n={},o="Practic\u0103: Implementare modul UAL",l={unversionedId:"Laboratoare/6 Verilog Secven\u021bial/Unitate aritmetica logica/Practic\u0103/README",id:"Laboratoare/6 Verilog Secven\u021bial/Unitate aritmetica logica/Practic\u0103/README",title:"Practic\u0103: Implementare modul UAL",description:"Con\u021binutul laboratorului este present la urm\u0103torul link.",source:"@site/docs/Laboratoare/6 Verilog Secven\u021bial/Unitate aritmetica logica/Practic\u0103/README.md",sourceDirName:"Laboratoare/6 Verilog Secven\u021bial/Unitate aritmetica logica/Practic\u0103",slug:"/Laboratoare/6 Verilog Secven\u021bial/Unitate aritmetica logica/Practic\u0103/",permalink:"/computer-architecture/Laboratoare/6 Verilog Secven\u021bial/Unitate aritmetica logica/Practic\u0103/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Unitatea aritmetic\u0103-logic\u0103 (UAL)",permalink:"/computer-architecture/Laboratoare/6 Verilog Secven\u021bial/Unitate aritmetica logica/Teorie/"},next:{title:"7 Calculator Didactic",permalink:"/computer-architecture/Laboratoare/7 Calculator Didactic/"}},c={},u=[{value:"Extra operations",id:"extra-operations",level:2},{value:"XNOR",id:"xnor",level:3},{value:"MUL",id:"mul",level:3},{value:"DIV",id:"div",level:3},{value:"MOD",id:"mod",level:3}],p={toc:u},m="wrapper";function d(e){let{components:t,...r}=e;return(0,i.yg)(m,(0,a.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"practic\u0103-implementare-modul-ual"},"Practic\u0103: Implementare modul UAL"),(0,i.yg)("p",null,"Con\u021binutul laboratorului este present la urm\u0103torul ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/cs-pub-ro/computer-architecture/tree/main/chapters/microprogramable_cpu/arithmetic-logic-unit/drills/alu/support"},"link"),"."),(0,i.yg)("p",null,"Vom completa con\u021binutul ",(0,i.yg)("strong",{parentName:"p"},"modulului alu"),", folosind intr\u0103rile \u0219i ie\u0219irile prezentate mai jos."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-verilog"},"module alu #(\n    parameter p_data_width = 6, // 6 for FPGA testing, 16 for Simulation and inside the CPU\n    parameter p_flags_width = 5\n)(\n    output wire [(p_data_width-1):0] o_w_out,\n    output wire [(p_flags_width-1):0] o_w_flags,\n    input wire [(p_data_width-1):0] i_w_op1,\n    input wire [(p_data_width-1):0] i_w_op2,\n    input wire [3:0] i_w_opcode,\n    input wire i_w_carry,\n    input wire i_w_oe\n);\n")),(0,i.yg)("p",null,"Codurile de identificare ale opera\u021biilor (cei 4 bi\u021bi S) sunt definite \xeen modulul ",(0,i.yg)("inlineCode",{parentName:"p"},"alu.v")," din scheletul de laborator \u0219i in codul de mai jos."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-verilog"},"localparam ADC  = 4'd0;\nlocalparam SBB1 = 4'd1;\nlocalparam SBB2 = 4'd2;\nlocalparam NOT  = 4'd3;\nlocalparam AND  = 4'd4;\nlocalparam OR   = 4'd5;\nlocalparam XOR  = 4'd6;\nlocalparam SHL  = 4'd7;\nlocalparam SHR  = 4'd8;\nlocalparam SAR  = 4'd9;\n")),(0,i.yg)("p",null,"TODO: exaplain the remaining code"),(0,i.yg)("h2",{id:"extra-operations"},"Extra operations"),(0,i.yg)("h3",{id:"xnor"},"XNOR"),(0,i.yg)("h3",{id:"mul"},"MUL"),(0,i.yg)("h3",{id:"div"},"DIV"),(0,i.yg)("h3",{id:"mod"},"MOD"))}d.isMDXComponent=!0}}]);